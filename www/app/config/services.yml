# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

#    shop.product.command_handler:
#        class: Shop\Product\ProductCommandHandler
#        arguments: ['@shop.product.repository']
#        tags:
#            - { name: broadway.command_handler }
#
#    shop.product.repository:
#        class: Shop\Product\Repository
#        arguments: ['@broadway.event_store.dbal', '@broadway.event_handling.event_bus']
#
#    shop.product.read_model.projector:
#        class: Shop\Product\Projector\ProductProjector
#        arguments: ['@shop.product.read_model.repository']
#        tags:
#            - { name: broadway.domain.event_listener }
#
#    shop.product.read_model.repository:
#        class: Broadway\ReadModel\ElasticSearch\ElasticSearchRepository
#        arguments:
#           - "@broadway.elasticsearch.client"
#           - "@broadway.simple_interface_serializer"
#           - "%read_model_index_products%"
#           - Shop\Product\ReadModel\Product
#        public: true
